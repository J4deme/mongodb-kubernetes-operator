vars:
  registry: <registry>

images:
  - name: agent-ubi
    vars:
      context: .
      template_context: scripts/dev/templates/agent

    inputs:
      - agent_version
      - tools_version
      - agent_image
      - agent_image_dev
      - agent_debug
      - agent_variant
      - agent_distro
      - agent_base_url
      - agent_debug

    platform: linux/amd64
    stages:
      - name: agent-ubi-context
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: [ "ubi" ]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_base_url: $(inputs.params.agent_base_url)
          agent_distro: $(inputs.params.agent_distro)
          agent_variant: $(inputs.params.agent_variant)
          tools_distro: rhel70-x86_64

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: agent-template-ubi
        task_type: dockerfile_template
        distro: ubi
        tags: [ "ubi" ]

        output:
          - dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

      - name: agent-ubi-build
        task_type: docker_build
        tags: [ "ubi" ]

        dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.agent_image_dev):$(inputs.params.version_id)-context
          agent_version: $(inputs.params.agent_version)
          agent_debug: $(inputs.params.agent_debug)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image_dev)
            tag: latest

      - name: agent-template-ubi-s3
        task_type: dockerfile_template
        tags: [ "ubi", "release" ]
        distro: ubi

        inputs:
          - release_version

        output:
          - dockerfile: $(inputs.params.s3_bucket)/mongodb-agent/$(inputs.params.release_version)/ubi/Dockerfile

      - name: agent-context-ubi-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/agent/Dockerfile.builder
        tags: [ "ubi", "release" ]
        buildargs:
          agent_version: $(inputs.params.agent_version)
          tools_version: $(inputs.params.tools_version)
          agent_distro: rhel7_x86_64
          tools_distro: rhel70-x86_64

        labels:
          quay.expires-after: Never

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image)
            tag: $(inputs.params.agent_version)-context

      - name: agent-ubi-release
        task_type: docker_build
        tags: [ "ubi", "release" ]
        dockerfile: scripts/dev/templates/agent/Dockerfile.ubi-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.agent_image):$(inputs.params.agent_version)-context
          agent_version: $(inputs.params.agent_version)
          agent_debug: $(inputs.params.agent_debug)

        labels:
          quay.expires-after: Never

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.agent_image)
            tag: $(inputs.params.agent_version)

  - name: readiness-probe-init
    vars:
      context: .
      template_context: scripts/dev/templates/readiness

    inputs:
      - readiness_probe_image
      - readiness_probe_image_dev

    platform: linux/amd64
    stages:
      - name: readiness-init-context-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.builder
        tags: [ "readiness-probe", "ubi" ]
        labels:
          quay.expires-after: 48h

        buildargs:
          builder_image: $(inputs.params.builder_image)

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: readiness-template-ubi
        task_type: dockerfile_template
        tags: [ "ubi" ]
        template_file_extension: readiness

        inputs:
          - base_image

        output:
          - dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness-$(inputs.params.version_id)

      - name: readiness-init-build
        task_type: docker_build
        tags: [ "readiness-probe", "ubi" ]
        dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness-$(inputs.params.version_id)

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev):$(inputs.params.version_id)-context


        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image_dev)
            tag: latest

      - name: readiness-init-context-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.builder
        tags: [ "readiness-probe", "release" , "ubi" ]

        labels:
          quay.expires-after: Never

        buildargs:
          builder_image: $(inputs.params.builder_image)

        inputs:
          - release_version
          - builder_image

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image)
            tag: $(inputs.params.release_version)-context

      - name: readiness-template-release
        task_type: dockerfile_template
        tags: [ "readiness-probe", "release", "ubi" ]
        template_file_extension: readiness
        inputs:
          - base_image
          - release_version

        output:
          - dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness-$(inputs.params.release_version)
          - dockerfile: $(inputs.params.s3_bucket)/mongodb-kubernetes-readinessprobe/$(inputs.params.release_version)/ubi/Dockerfile

      - name: readiness-init-build-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/readiness/Dockerfile.readiness-$(inputs.params.release_version)
        tags: [ "readiness-probe", "release" , "ubi" ]

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.readiness_probe_image):$(inputs.params.release_version)-context

        labels:
          quay.expires-after: Never

        inputs:
          - base_image
          - release_version

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.readiness_probe_image)
            tag: $(inputs.params.release_version)

  - name: version-post-start-hook-init
    vars:
      context: .
      template_context: scripts/dev/templates/versionhook

    inputs:
      - version_post_start_hook_image
      - version_post_start_hook_image_dev

    platform: linux/amd64
    stages:
      - name: version-post-start-hook-init-context-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.builder
        tags: [ "post-start-hook", "ubi" ]

        buildargs:
          builder_image: $(inputs.params.builder_image)

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev)
            tag: $(inputs.params.version_id)-context

      - name: version-post-start-hook-template-ubi
        task_type: dockerfile_template
        tags: [ "ubi" ]
        template_file_extension: versionhook

        inputs:
          - base_image

        output:
          - dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook-$(inputs.params.version_id)

      - name: version-post-start-hook-init-build
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook-$(inputs.params.version_id)
        tags: [ "post-start-hook", "ubi" ]

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev):$(inputs.params.version_id)-context

        labels:
          quay.expires-after: 48h

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev)
            tag: $(inputs.params.version_id)
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image_dev)
            tag: latest

      - name: version-post-start-hook-init-context-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.builder
        tags: [ "release", "post-start-hook",  "ubi", ]

        labels:
          quay.expires-after: Never

        buildargs:
          builder_image: $(inputs.params.builder_image)

        inputs:
          - release_version
          - builder_image

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image)
            tag: $(inputs.params.release_version)-context

      - name: versionhook-template-release
        task_type: dockerfile_template
        tags: [ "post-start-hook", "release", "ubi" ]
        template_file_extension: versionhook
        inputs:
          - base_image
          - release_version

        output:
          - dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook-$(inputs.params.release_version)
          - dockerfile: $(inputs.params.s3_bucket)/mongodb-kubernetes-operator-version-upgrade-post-start-hook/$(inputs.params.release_version)/ubi/Dockerfile

      - name: version-post-start-hook-init-build-release
        task_type: docker_build
        dockerfile: scripts/dev/templates/versionhook/Dockerfile.versionhook-$(inputs.params.release_version)
        tags: [ "release", "post-start-hook",  "ubi" ]

        buildargs:
          imagebase: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image):$(inputs.params.release_version)-context

        labels:
          quay.expires-after: Never

        inputs:
          - base_image
          - release_version

        output:
          - registry: $(inputs.params.registry)/$(inputs.params.version_post_start_hook_image)
            tag: $(inputs.params.release_version)